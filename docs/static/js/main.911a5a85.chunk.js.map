{"version":3,"sources":["Components/AddCategory.jsx","Components/GifGridItem.jsx","helpers/GetGifs.js","Components/GifGrid.jsx","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","categoria","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","setTimeout","then","imgs","useFetchGifs","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"mMA4BeA,EA1BK,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEFC,mBAAS,IAFP,mBAE/BC,EAF+B,KAEnBC,EAFmB,KAetC,OACI,sBAAMC,SARW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,MAIlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAhBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,QCIhBG,MATf,YAAyC,EAAlBC,GAAmB,IAAfC,EAAc,EAAdA,MAAOC,EAAO,EAAPA,IAC9B,OACI,sBAAKC,UAAU,qBAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCNHK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbN,EADa,iDACmCO,UAAWF,GAD9C,+DAGAG,MAAMR,GAHN,cAGbS,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAKc,EAAIC,OAAOC,iBAAiBhB,QAVtB,kBAcZY,GAdY,4CAAH,sDCqCLK,MA/Bf,YAA+B,IAAbZ,EAAY,EAAZA,UAAY,ECHF,SAACA,GAAe,IAAD,EACbrB,mBAAS,CAC/B2B,KAAM,GACNO,SAAS,IAH0B,mBAChCC,EADgC,KACzBC,EADyB,KAmBvC,OAbAC,qBAAU,WAENC,YAAW,WACPlB,EAAQC,GAAWkB,MAAK,SAAAC,GACpBJ,EAAS,CACLT,KAAMa,EACNN,SAAS,SAGlB,OAEJ,CAACb,IAEGc,EDdwBM,CAAapB,GAAhCU,EAFc,EAEnBJ,KAAaO,EAFM,EAENA,QASpB,OACI,eAAC,WAAD,WACI,6BAAKb,IAEJa,GAAW,wCAEZ,qBAAKjB,UAAU,YAAf,SAEQc,EAAOF,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADEA,EAAIhB,aExBvB,SAAS4B,IAAgB,IAAD,EAEC1C,mBAAU,CAAC,cAFZ,mBAE5B2C,EAF4B,KAEhB5C,EAFgB,KAInC,OACG,eAAC,WAAD,WACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEQ4C,EAAWd,KAAI,SAAAR,GAAS,OACnB,cAAC,EAAD,CAEIA,UAAaA,GADNA,W,MCRnCuB,IAASC,OAEP,cAACH,EAAD,IACAI,SAASC,eAAe,W","file":"static/js/main.911a5a85.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\nconst AddCategory = ( {setCategorias}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n    \r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();//evita que realice el refresh\r\n        if (inputValue.trim().length > 2) {\r\n            setCategorias(cats => [ inputValue, ...cats]);\r\n            setInputValue('');           \r\n        }\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />    \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddCategory\r\nAddCategory.propTypes = {\r\n    setCategorias: PropTypes.func.isRequired\r\n}","import React from 'react'\r\n\r\nfunction GifGridItem( {id, title, url} ) {\r\n    return (\r\n        <div className=\"card animate__flip\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n\r\n// className en lugar de class\r\n//esto es porque al ser un archivo de js toma el class como si estuviera haciendo referencia a una clase y no al class del css","export const getGifs = async (categoria) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI( categoria )}&limit=10&api_key=LET9lI3JWFq4UEK1qjh8P364Tip8Hj53`;\r\n   \r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React, {Fragment, useEffect, useState} from 'react'\r\nimport GifGridItem from '../Components/GifGridItem'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n\r\n//useEffect permite ejecutar cierto codigo pero de manera CONDICIONAL\r\n\r\nfunction GifGrid({categoria}) {\r\n   \r\n    const {data:images, loading} = useFetchGifs(categoria);\r\n\r\n    // useEffect ( () => {\r\n    //     getGifs(categoria)\r\n    //         .then(img => setImages(img)) // .then(setImages), es lo mismo\r\n    // }, [categoria])\r\n\r\n    \r\n\r\n    return (\r\n        <Fragment>\r\n            <h3>{categoria}</h3> \r\n            \r\n            {loading && <p>Loading</p> }\r\n            \r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem \r\n                            key= {img.id}\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import {useState, useEffect} from 'react'\r\nimport {getGifs} from '../helpers/GetGifs'\r\n\r\nexport const useFetchGifs = (categoria) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n   \r\n    useEffect(() => {\r\n        \r\n        setTimeout(() => {\r\n            getGifs(categoria).then(imgs => {\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            })\r\n        }, 3000);\r\n        \r\n    }, [categoria])\r\n\r\n    return state;\r\n}\r\n","import React, { Fragment, useState } from 'react'\r\nimport AddCategory from './Components/AddCategory'\r\nimport GifGrid from './Components/GifGrid'\r\nexport default function GifExpertApp() {\r\n\r\n    const [categorias, setCategorias] = useState( ['One Punch']) \r\n\r\n    return (\r\n       <Fragment>\r\n           <h2>GifExpertApp</h2>\r\n           <AddCategory setCategorias={setCategorias} />\r\n           <hr />\r\n           <ol>\r\n               {\r\n                   categorias.map(categoria => \r\n                        <GifGrid \r\n                            key = {categoria}\r\n                            categoria = {categoria}\r\n                         />\r\n                    )\r\n               }\r\n           </ol>\r\n       </Fragment>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}